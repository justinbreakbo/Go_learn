swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /t_lesson/:
    get:
      tags:
      - t_lesson
      description: get TLesson
      operationId: TLessonController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TLesson'
        "403":
          description: ""
    post:
      tags:
      - t_lesson
      description: create TLesson
      operationId: TLessonController.Post
      parameters:
      - in: body
        name: body
        description: body for TLesson content
        required: true
        schema:
          $ref: '#/definitions/models.TLesson'
      responses:
        "201":
          description: '{int} models.TLesson'
        "403":
          description: body is empty
  /t_lesson/{id}:
    get:
      tags:
      - t_lesson
      description: get TLesson by id
      operationId: TLessonController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TLesson'
        "403":
          description: :id is empty
    put:
      tags:
      - t_lesson
      description: update the TLesson
      operationId: TLessonController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TLesson content
        required: true
        schema:
          $ref: '#/definitions/models.TLesson'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TLesson'
        "403":
          description: :id is not int
    delete:
      tags:
      - t_lesson
      description: delete the TLesson
      operationId: TLessonController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /t_match/:
    get:
      tags:
      - t_match
      description: get TMatch
      operationId: TMatchController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TMatch'
        "403":
          description: ""
    post:
      tags:
      - t_match
      description: create TMatch
      operationId: TMatchController.Post
      parameters:
      - in: body
        name: body
        description: body for TMatch content
        required: true
        schema:
          $ref: '#/definitions/models.TMatch'
      responses:
        "201":
          description: '{int} models.TMatch'
        "403":
          description: body is empty
  /t_match/{id}:
    get:
      tags:
      - t_match
      description: get TMatch by id
      operationId: TMatchController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TMatch'
        "403":
          description: :id is empty
    put:
      tags:
      - t_match
      description: update the TMatch
      operationId: TMatchController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TMatch content
        required: true
        schema:
          $ref: '#/definitions/models.TMatch'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TMatch'
        "403":
          description: :id is not int
    delete:
      tags:
      - t_match
      description: delete the TMatch
      operationId: TMatchController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /t_options/:
    get:
      tags:
      - t_options
      description: get TOptions
      operationId: TOptionsController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TOptions'
        "403":
          description: ""
    post:
      tags:
      - t_options
      description: create TOptions
      operationId: TOptionsController.Post
      parameters:
      - in: body
        name: body
        description: body for TOptions content
        required: true
        schema:
          $ref: '#/definitions/models.TOptions'
      responses:
        "201":
          description: '{int} models.TOptions'
        "403":
          description: body is empty
  /t_options/{id}:
    get:
      tags:
      - t_options
      description: get TOptions by id
      operationId: TOptionsController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TOptions'
        "403":
          description: :id is empty
    put:
      tags:
      - t_options
      description: update the TOptions
      operationId: TOptionsController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TOptions content
        required: true
        schema:
          $ref: '#/definitions/models.TOptions'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TOptions'
        "403":
          description: :id is not int
    delete:
      tags:
      - t_options
      description: delete the TOptions
      operationId: TOptionsController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /t_organization/:
    get:
      tags:
      - t_organization
      description: get TOrganization
      operationId: TOrganizationController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TOrganization'
        "403":
          description: ""
    post:
      tags:
      - t_organization
      description: create TOrganization
      operationId: TOrganizationController.Post
      parameters:
      - in: body
        name: body
        description: body for TOrganization content
        required: true
        schema:
          $ref: '#/definitions/models.TOrganization'
      responses:
        "201":
          description: '{int} models.TOrganization'
        "403":
          description: body is empty
  /t_organization/{id}:
    get:
      tags:
      - t_organization
      description: get TOrganization by id
      operationId: TOrganizationController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TOrganization'
        "403":
          description: :id is empty
    put:
      tags:
      - t_organization
      description: update the TOrganization
      operationId: TOrganizationController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TOrganization content
        required: true
        schema:
          $ref: '#/definitions/models.TOrganization'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TOrganization'
        "403":
          description: :id is not int
    delete:
      tags:
      - t_organization
      description: delete the TOrganization
      operationId: TOrganizationController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /t_project/:
    get:
      tags:
      - t_project
      description: get TProject
      operationId: TProjectController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TProject'
        "403":
          description: ""
    post:
      tags:
      - t_project
      description: create TProject
      operationId: TProjectController.Post
      parameters:
      - in: body
        name: body
        description: body for TProject content
        required: true
        schema:
          $ref: '#/definitions/models.TProject'
      responses:
        "201":
          description: '{int} models.TProject'
        "403":
          description: body is empty
  /t_project/{id}:
    get:
      tags:
      - t_project
      description: get TProject by id
      operationId: TProjectController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TProject'
        "403":
          description: :id is empty
    put:
      tags:
      - t_project
      description: update the TProject
      operationId: TProjectController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TProject content
        required: true
        schema:
          $ref: '#/definitions/models.TProject'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TProject'
        "403":
          description: :id is not int
    delete:
      tags:
      - t_project
      description: delete the TProject
      operationId: TProjectController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /t_stu_lesson/:
    get:
      tags:
      - t_stu_lesson
      description: get TStuLesson
      operationId: TStuLessonController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TStuLesson'
        "403":
          description: ""
    post:
      tags:
      - t_stu_lesson
      description: create TStuLesson
      operationId: TStuLessonController.Post
      parameters:
      - in: body
        name: body
        description: body for TStuLesson content
        required: true
        schema:
          $ref: '#/definitions/models.TStuLesson'
      responses:
        "201":
          description: '{int} models.TStuLesson'
        "403":
          description: body is empty
  /t_stu_lesson/{id}:
    get:
      tags:
      - t_stu_lesson
      description: get TStuLesson by id
      operationId: TStuLessonController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TStuLesson'
        "403":
          description: :id is empty
    put:
      tags:
      - t_stu_lesson
      description: update the TStuLesson
      operationId: TStuLessonController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TStuLesson content
        required: true
        schema:
          $ref: '#/definitions/models.TStuLesson'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TStuLesson'
        "403":
          description: :id is not int
    delete:
      tags:
      - t_stu_lesson
      description: delete the TStuLesson
      operationId: TStuLessonController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /t_user_match/:
    get:
      tags:
      - t_user_match
      description: get TUserMatch
      operationId: TUserMatchController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TUserMatch'
        "403":
          description: ""
    post:
      tags:
      - t_user_match
      description: create TUserMatch
      operationId: TUserMatchController.Post
      parameters:
      - in: body
        name: body
        description: body for TUserMatch content
        required: true
        schema:
          $ref: '#/definitions/models.TUserMatch'
      responses:
        "201":
          description: '{int} models.TUserMatch'
        "403":
          description: body is empty
  /t_user_match/{id}:
    get:
      tags:
      - t_user_match
      description: get TUserMatch by id
      operationId: TUserMatchController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TUserMatch'
        "403":
          description: :id is empty
    put:
      tags:
      - t_user_match
      description: update the TUserMatch
      operationId: TUserMatchController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TUserMatch content
        required: true
        schema:
          $ref: '#/definitions/models.TUserMatch'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TUserMatch'
        "403":
          description: :id is not int
    delete:
      tags:
      - t_user_match
      description: delete the TUserMatch
      operationId: TUserMatchController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
definitions:
  models.TLesson:
    title: TLesson
    type: object
    properties:
      Addi:
        type: string
      Address:
        type: string
      Contact:
        type: string
      CreateTime:
        type: string
        format: datetime
      Creator:
        type: integer
        format: int64
      Deadline:
        type: string
        format: datetime
      DomainId:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      Introduce:
        type: string
      IsTransfer:
        type: boolean
      LessonTime:
        type: string
      Name:
        type: string
      Note:
        type: string
      OrganizationId:
        $ref: '#/definitions/models.TOrganization'
      Poster:
        type: string
      Prize:
        type: string
      QrCode:
        type: string
      Remark:
        type: string
      State:
        type: integer
        format: int64
      TeacherIntroduce:
        type: string
      Type:
        type: integer
        format: int64
  models.TMatch:
    title: TMatch
    type: object
    properties:
      Addi:
        type: string
      Address:
        type: string
      Contact:
        type: string
      CreateTime:
        type: string
        format: datetime
      Creator:
        type: integer
        format: int64
      Deadline:
        type: string
        format: datetime
      DomainId:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      Name:
        type: string
      Note:
        type: string
      OrganizationId:
        $ref: '#/definitions/models.TOrganization'
      Poster:
        type: string
      QrCode:
        type: string
      Remark:
        type: string
      State:
        type: integer
        format: int64
      TimeEnd:
        type: string
        format: datetime
      TimeStart:
        type: string
        format: datetime
      Type:
        type: integer
        format: int64
  models.TOptions:
    title: TOptions
    type: object
    properties:
      Addi:
        type: string
      ClassNumber:
        type: integer
        format: int64
      CreateTime:
        type: string
        format: datetime
      Creator:
        type: integer
        format: int64
      Discount:
        type: string
      DomainId:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      LessonId:
        $ref: '#/definitions/models.TLesson'
      MemberLimit:
        type: integer
        format: int64
      Price:
        type: integer
        format: int64
      Remark:
        type: string
  models.TOrganization:
    title: TOrganization
    type: object
    properties:
      About:
        type: string
      Addi:
        type: string
      Authority:
        type: string
      Contact:
        type: string
      CreateTime:
        type: string
        format: datetime
      Creator:
        type: integer
        format: int64
      DomainId:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      Introduce:
        type: string
      Logo:
        type: string
      Name:
        type: string
      News:
        type: string
      Password:
        type: string
      Phone:
        type: string
      QrCode:
        type: string
      Remark:
        type: string
      Token:
        type: string
      Type:
        type: integer
        format: int64
  models.TProject:
    title: TProject
    type: object
    properties:
      Addi:
        type: string
      CreateTime:
        type: string
        format: datetime
      Creator:
        type: integer
        format: int64
      DomainId:
        type: integer
        format: int64
      EarlyDeadline:
        type: string
        format: datetime
      EarlyPrice:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      MatchId:
        $ref: '#/definitions/models.TMatch'
      Name:
        type: string
      NumberLimit:
        type: integer
        format: int64
      Poster:
        type: string
      Price:
        type: integer
        format: int64
      Remark:
        type: string
      RepeatTeamNumber:
        type: integer
        format: int64
      TeamNumber:
        type: integer
        format: int64
      TeamNumberHigh:
        type: integer
        format: int64
      TeamNumberLow:
        type: integer
        format: int64
      TimeEnd:
        type: string
        format: datetime
      TimeStart:
        type: string
        format: datetime
      Type:
        type: integer
        format: int64
  models.TStuLesson:
    title: TStuLesson
    type: object
    properties:
      Addi:
        type: string
      CreateTime:
        type: string
        format: datetime
      Creator:
        type: integer
        format: int64
      DomainId:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      OptionId:
        $ref: '#/definitions/models.TOptions'
      PayPrice:
        type: integer
        format: int64
      PayState:
        type: integer
        format: int64
      PayTime:
        type: string
        format: datetime
      Remark:
        type: string
      StudentId:
        type: integer
        format: int64
  models.TUserMatch:
    title: TUserMatch
    type: object
    properties:
      Addi:
        type: string
      CreateTime:
        type: string
        format: datetime
      Creator:
        type: integer
        format: int64
      DomainId:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      PayPrice:
        type: integer
        format: int64
      PayState:
        type: integer
        format: int64
      PayTime:
        type: string
        format: datetime
      ProjectId:
        $ref: '#/definitions/models.TProject'
      Remark:
        type: string
      TeamActualNumber:
        type: integer
        format: int64
      TeamName:
        type: string
      UserId:
        type: integer
        format: int64
      UserName:
        type: string
tags:
- name: t_lesson
  description: |
    TLessonController operations for TLesson
- name: t_match
  description: |
    TMatchController operations for TMatch
- name: t_options
  description: |
    TOptionsController operations for TOptions
- name: t_organization
  description: |
    TOrganizationController operations for TOrganization
- name: t_project
  description: |
    TProjectController operations for TProject
- name: t_stu_lesson
  description: |
    TStuLessonController operations for TStuLesson
- name: t_user_match
  description: |
    TUserMatchController operations for TUserMatch
